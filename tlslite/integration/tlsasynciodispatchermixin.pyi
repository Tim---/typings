import asyncio
from .asyncstatemachine import AsyncStateMachine as AsyncStateMachine
from _typeshed import Incomplete
from tlslite.tlsconnection import TLSConnection as TLSConnection

class TLSAsyncioDispatcherMixIn(asyncio.Protocol):
    tls_connection: Incomplete
    sibling_class: Incomplete
    def __init__(self, sock: Incomplete | None = None) -> None: ...
    transport: Incomplete
    def connection_made(self, transport) -> None: ...
    read_buffer: Incomplete
    def data_received(self, data) -> None: ...
    def connection_lost(self, exc) -> None: ...
    def readable(self): ...
    def writable(self): ...
    def handle_read(self) -> None: ...
    def handle_write(self) -> None: ...
    def out_connect_event(self) -> None: ...
    def out_close_event(self) -> None: ...
    def out_read_event(self, read_buffer) -> None: ...
    def out_write_event(self) -> None: ...
    def recv(self, buffer_size: int = 16384): ...
    def send(self, write_buffer): ...
    def close(self) -> None: ...
