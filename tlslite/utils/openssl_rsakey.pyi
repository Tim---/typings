from .cryptomath import *
from .rsakey import *
from .compat import compatAscii2Bytes as compatAscii2Bytes, compat_b2a as compat_b2a
from .python_rsakey import Python_RSAKey as Python_RSAKey
from _typeshed import Incomplete

def password_callback(
    v,
    prompt1: str = "Enter private key passphrase:",
    prompt2: str = "Verify passphrase:",
): ...

class OpenSSL_RSAKey(RSAKey):
    rsa: Incomplete
    key_type: Incomplete
    def __init__(self, n: int = 0, e: int = 0, key_type: str = "rsa") -> None: ...
    def __del__(self) -> None: ...
    def __getattr__(self, name): ...
    def hasPrivateKey(self): ...
    def acceptsPassword(self): ...
    def write(self, password: Incomplete | None = None): ...
    @staticmethod
    def generate(bits, key_type: str = "rsa"): ...
    @staticmethod
    def parse(s, passwordCallback: Incomplete | None = None): ...
