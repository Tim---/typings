from .cryptomath import *
from .aes import *
from .python_aes import Python_AES_CTR as Python_AES_CTR
from _typeshed import Incomplete

def new(key, mode, IV): ...

class OpenSSL_AES(AES):
    def __init__(self, key, mode, IV) -> None: ...
    @property
    def IV(self): ...
    @IV.setter
    def IV(self, iv) -> None: ...
    def encrypt(self, plaintext): ...
    def decrypt(self, ciphertext): ...
    def __del__(self) -> None: ...

class OpenSSL_CTR(AES):
    key: Incomplete
    def __init__(self, key, mode, IV) -> None: ...
    @property
    def counter(self): ...
    @counter.setter
    def counter(self, ctr) -> None: ...
    def encrypt(self, plaintext): ...
    def decrypt(self, ciphertext): ...
    def __del__(self) -> None: ...
