from .constants import (
    CertificateCompressionAlgorithm as CertificateCompressionAlgorithm,
    CertificateStatusType as CertificateStatusType,
    CertificateType as CertificateType,
    ECPointFormat as ECPointFormat,
    ExtensionType as ExtensionType,
    GroupName as GroupName,
    HashAlgorithm as HashAlgorithm,
    HeartbeatMode as HeartbeatMode,
    NameType as NameType,
    PskKeyExchangeMode as PskKeyExchangeMode,
    SignatureAlgorithm as SignatureAlgorithm,
    SignatureScheme as SignatureScheme,
)
from .errors import TLSInternalError as TLSInternalError
from .utils.codec import DecodeError as DecodeError, Parser as Parser, Writer as Writer
from _typeshed import Incomplete
from typing import NamedTuple

class TLSExtension:
    extType: Incomplete
    serverType: Incomplete
    encExtType: Incomplete
    cert: Incomplete
    hrr: Incomplete
    def __init__(
        self,
        server: bool = False,
        extType: Incomplete | None = None,
        encExt: bool = False,
        cert: bool = False,
        hrr: bool = False,
    ) -> None: ...
    @property
    def extData(self): ...
    def create(self, *args, **kwargs): ...
    def write(self): ...
    def parse(self, p): ...
    def __eq__(self, that): ...

class CustomNameExtension(TLSExtension):
    def __init__(self, field_name, extType) -> None: ...
    @property
    def extData(self) -> None: ...
    def create(self, values): ...
    def parse(self, parser) -> None: ...
    def __getattr__(self, name): ...
    def __setattr__(self, name, value) -> None: ...

class VarBytesExtension(CustomNameExtension):
    def __init__(self, field_name, length_length, ext_type) -> None: ...
    @property
    def extData(self): ...
    def parse(self, parser): ...

class ListExtension(CustomNameExtension):
    def __init__(
        self, fieldName, extType, item_enum: Incomplete | None = None
    ) -> None: ...

class VarListExtension(ListExtension):
    def __init__(
        self,
        elemLength,
        lengthLength,
        fieldName,
        extType,
        item_enum: Incomplete | None = None,
    ) -> None: ...
    @property
    def extData(self): ...
    def parse(self, parser): ...

class VarSeqListExtension(ListExtension):
    def __init__(
        self,
        elemLength,
        elemNum,
        lengthLength,
        fieldName,
        extType,
        item_enum: Incomplete | None = None,
    ) -> None: ...
    @property
    def extData(self): ...
    def parse(self, parser): ...

class IntExtension(CustomNameExtension):
    def __init__(
        self, elem_length, field_name, ext_type, item_enum: Incomplete | None = None
    ) -> None: ...
    @property
    def extData(self): ...
    def parse(self, parser): ...

class SNIExtension(TLSExtension):
    class ServerName(NamedTuple):
        name_type: Incomplete
        name: Incomplete

    serverNames: Incomplete
    def __init__(self) -> None: ...
    def create(
        self,
        hostname: Incomplete | None = None,
        hostNames: Incomplete | None = None,
        serverNames: Incomplete | None = None,
    ): ...
    @property
    def hostNames(self): ...
    @hostNames.setter
    def hostNames(self, hostNames) -> None: ...
    @hostNames.deleter
    def hostNames(self) -> None: ...
    @property
    def extData(self): ...
    def write(self): ...
    def parse(self, p): ...

class SupportedVersionsExtension(VarSeqListExtension):
    def __init__(self) -> None: ...

class SrvSupportedVersionsExtension(TLSExtension):
    version: Incomplete
    def __init__(self) -> None: ...
    def create(self, version): ...
    @property
    def extData(self): ...
    def parse(self, parser): ...

class ClientCertTypeExtension(VarListExtension):
    def __init__(self) -> None: ...

class ServerCertTypeExtension(IntExtension):
    serverType: bool
    def __init__(self) -> None: ...
    def parse(self, parser): ...

class SRPExtension(TLSExtension):
    identity: Incomplete
    def __init__(self) -> None: ...
    @property
    def extData(self): ...
    def create(self, identity: Incomplete | None = None): ...
    def parse(self, p): ...

class NPNExtension(TLSExtension):
    protocols: Incomplete
    def __init__(self) -> None: ...
    @property
    def extData(self): ...
    def create(self, protocols: Incomplete | None = None): ...
    def parse(self, p): ...

class TACKExtension(TLSExtension):
    class TACK:
        public_key: Incomplete
        min_generation: int
        generation: int
        expiration: int
        target_hash: Incomplete
        signature: Incomplete
        def __init__(self) -> None: ...
        def create(
            self,
            public_key,
            min_generation,
            generation,
            expiration,
            target_hash,
            signature,
        ): ...
        def write(self): ...
        def parse(self, p): ...
        def __eq__(self, other): ...

    tacks: Incomplete
    activation_flags: int
    def __init__(self) -> None: ...
    @property
    def extData(self): ...
    def create(self, tacks, activation_flags): ...
    def parse(self, p): ...

class SupportedGroupsExtension(VarListExtension):
    def __init__(self) -> None: ...

class ECPointFormatsExtension(VarListExtension):
    def __init__(self) -> None: ...

class _SigListExt(VarSeqListExtension): ...

class SignatureAlgorithmsExtension(_SigListExt):
    def __init__(self) -> None: ...

class SignatureAlgorithmsCertExtension(_SigListExt):
    def __init__(self) -> None: ...

class PaddingExtension(TLSExtension):
    paddingData: Incomplete
    def __init__(self) -> None: ...
    @property
    def extData(self): ...
    def create(self, size): ...
    def parse(self, p): ...

class RenegotiationInfoExtension(VarBytesExtension):
    def __init__(self) -> None: ...

class ALPNExtension(TLSExtension):
    protocol_names: Incomplete
    def __init__(self) -> None: ...
    @property
    def extData(self): ...
    def create(self, protocol_names: Incomplete | None = None): ...
    def parse(self, parser): ...

class StatusRequestExtension(TLSExtension):
    status_type: Incomplete
    responder_id_list: Incomplete
    request_extensions: Incomplete
    def __init__(self) -> None: ...
    @property
    def extData(self): ...
    def create(
        self, status_type=..., responder_id_list=..., request_extensions: bytes = b""
    ): ...
    def parse(self, parser): ...

class CertificateStatusExtension(TLSExtension):
    status_type: Incomplete
    response: Incomplete
    def __init__(self) -> None: ...
    def create(self, status_type, response): ...
    def parse(self, parser): ...
    @property
    def extData(self): ...

class KeyShareEntry:
    group: Incomplete
    key_exchange: Incomplete
    private: Incomplete
    def __init__(self) -> None: ...
    def create(self, group, key_exchange, private: Incomplete | None = None): ...
    def parse(self, parser): ...
    def write(self, writer) -> None: ...

class HeartbeatExtension(IntExtension):
    def __init__(self) -> None: ...
    def parse(self, parser): ...

class ClientKeyShareExtension(TLSExtension):
    client_shares: Incomplete
    def __init__(self) -> None: ...
    @property
    def extData(self): ...
    def create(self, client_shares): ...
    def parse(self, parser): ...

class ServerKeyShareExtension(TLSExtension):
    server_share: Incomplete
    def __init__(self) -> None: ...
    def create(self, server_share): ...
    @property
    def extData(self): ...
    def parse(self, parser): ...

class HRRKeyShareExtension(TLSExtension):
    selected_group: Incomplete
    def __init__(self) -> None: ...
    def create(self, selected_group): ...
    @property
    def extData(self): ...
    def parse(self, parser): ...

class PskIdentity:
    identity: Incomplete
    obfuscated_ticket_age: Incomplete
    def __init__(self) -> None: ...
    def create(self, identity, obf_ticket_age): ...
    def write(self): ...
    def parse(self, parser): ...

class PreSharedKeyExtension(TLSExtension):
    identities: Incomplete
    binders: Incomplete
    def __init__(self) -> None: ...
    def create(self, identities, binders): ...
    @property
    def extData(self): ...
    def parse(self, parser): ...

class SrvPreSharedKeyExtension(IntExtension):
    def __init__(self) -> None: ...

class PskKeyExchangeModesExtension(VarListExtension):
    def __init__(self) -> None: ...

class CookieExtension(VarBytesExtension):
    def __init__(self) -> None: ...

class RecordSizeLimitExtension(IntExtension):
    def __init__(self) -> None: ...

class SessionTicketExtension(TLSExtension):
    ticket: Incomplete
    def __init__(self) -> None: ...
    def create(self, ticket): ...
    @property
    def extData(self): ...
    def parse(self, parser): ...

class CompressedCertificateExtension(VarListExtension):
    def __init__(self) -> None: ...
