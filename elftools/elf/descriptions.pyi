from ..common.utils import bytes2hex as bytes2hex
from .constants import (
    P_FLAGS as P_FLAGS,
    RH_FLAGS as RH_FLAGS,
    SH_FLAGS as SH_FLAGS,
    SUNW_SYMINFO_FLAGS as SUNW_SYMINFO_FLAGS,
    VER_FLAGS as VER_FLAGS,
)
from .enums import (
    ENUM_ATTR_TAG_ARM as ENUM_ATTR_TAG_ARM,
    ENUM_ATTR_TAG_RISCV as ENUM_ATTR_TAG_RISCV,
    ENUM_DT_FLAGS as ENUM_DT_FLAGS,
    ENUM_DT_FLAGS_1 as ENUM_DT_FLAGS_1,
    ENUM_D_TAG as ENUM_D_TAG,
    ENUM_E_VERSION as ENUM_E_VERSION,
    ENUM_P_TYPE_BASE as ENUM_P_TYPE_BASE,
    ENUM_RELOC_TYPE_AARCH64 as ENUM_RELOC_TYPE_AARCH64,
    ENUM_RELOC_TYPE_ARM as ENUM_RELOC_TYPE_ARM,
    ENUM_RELOC_TYPE_LOONGARCH as ENUM_RELOC_TYPE_LOONGARCH,
    ENUM_RELOC_TYPE_MIPS as ENUM_RELOC_TYPE_MIPS,
    ENUM_RELOC_TYPE_PPC64 as ENUM_RELOC_TYPE_PPC64,
    ENUM_RELOC_TYPE_S390X as ENUM_RELOC_TYPE_S390X,
    ENUM_RELOC_TYPE_i386 as ENUM_RELOC_TYPE_i386,
    ENUM_RELOC_TYPE_x64 as ENUM_RELOC_TYPE_x64,
    ENUM_SH_TYPE_BASE as ENUM_SH_TYPE_BASE,
)
from _typeshed import Incomplete

def describe_ei_class(x): ...
def describe_ei_data(x): ...
def describe_ei_version(x): ...
def describe_ei_osabi(x): ...
def describe_e_type(x, elffile: Incomplete | None = None): ...
def describe_e_machine(x): ...
def describe_e_version_numeric(x): ...
def describe_p_type(x): ...
def describe_p_flags(x): ...
def describe_rh_flags(x): ...
def describe_sh_type(x): ...
def describe_sh_flags(x): ...
def describe_symbol_type(x): ...
def describe_symbol_bind(x): ...
def describe_symbol_visibility(x): ...
def describe_symbol_local(x): ...
def describe_symbol_other(x): ...
def describe_symbol_shndx(x): ...
def describe_reloc_type(x, elffile): ...
def describe_dyn_tag(x): ...
def describe_dt_flags(x): ...
def describe_dt_flags_1(x): ...
def describe_syminfo_flags(x): ...
def describe_symbol_boundto(x): ...
def describe_ver_flags(x): ...
def describe_note(x, machine): ...
def describe_attr_tag_arm(tag, val, extra): ...
def describe_attr_tag_riscv(tag, val, extra): ...
def describe_note_gnu_property_bitmap_and(values, prefix, value): ...
def describe_note_gnu_properties(properties, machine): ...
