from ..common.exceptions import ELFCompressionError as ELFCompressionError
from ..common.utils import (
    elf_assert as elf_assert,
    parse_cstring_from_stream as parse_cstring_from_stream,
    struct_parse as struct_parse,
)
from .constants import SH_FLAGS as SH_FLAGS
from .notes import iter_notes as iter_notes
from _typeshed import Incomplete
from collections.abc import Generator

class Section:
    header: Incomplete
    name: Incomplete
    elffile: Incomplete
    stream: Incomplete
    structs: Incomplete
    def __init__(self, header, name, elffile) -> None: ...
    @property
    def compressed(self): ...
    @property
    def data_size(self): ...
    @property
    def data_alignment(self): ...
    def data(self): ...
    def is_null(self): ...
    def __getitem__(self, name): ...
    def __eq__(self, other): ...
    def __hash__(self): ...

class NullSection(Section):
    def is_null(self): ...

class StringTableSection(Section):
    def get_string(self, offset): ...

class SymbolTableIndexSection(Section):
    symboltable: Incomplete
    def __init__(self, header, name, elffile, symboltable) -> None: ...
    def get_section_index(self, n): ...

class SymbolTableSection(Section):
    stringtable: Incomplete
    def __init__(self, header, name, elffile, stringtable) -> None: ...
    def num_symbols(self): ...
    def get_symbol(self, n): ...
    def get_symbol_by_name(self, name): ...
    def iter_symbols(self) -> Generator[Incomplete, None, None]: ...

class Symbol:
    entry: Incomplete
    name: Incomplete
    def __init__(self, entry, name) -> None: ...
    def __getitem__(self, name): ...

class SUNWSyminfoTableSection(Section):
    symboltable: Incomplete
    def __init__(self, header, name, elffile, symboltable) -> None: ...
    def num_symbols(self): ...
    def get_symbol(self, n): ...
    def iter_symbols(self) -> Generator[Incomplete, None, None]: ...

class NoteSection(Section):
    def iter_notes(self): ...

class StabSection(Section):
    def iter_stabs(self) -> Generator[Incomplete, None, None]: ...

class Attribute:
    extra: Incomplete
    def __init__(self, tag) -> None: ...
    @property
    def tag(self): ...

class AttributesSubsubsection(Section):
    stream: Incomplete
    offset: Incomplete
    structs: Incomplete
    attribute: Incomplete
    header: Incomplete
    attr_start: Incomplete
    def __init__(self, stream, structs, offset, attribute) -> None: ...
    def iter_attributes(
        self, tag: Incomplete | None = None
    ) -> Generator[Incomplete, None, None]: ...
    @property
    def num_attributes(self): ...
    @property
    def attributes(self): ...

class AttributesSubsection(Section):
    stream: Incomplete
    offset: Incomplete
    structs: Incomplete
    subsubsection: Incomplete
    header: Incomplete
    subsubsec_start: Incomplete
    def __init__(self, stream, structs, offset, header, subsubsection) -> None: ...
    def iter_subsubsections(
        self, scope: Incomplete | None = None
    ) -> Generator[Incomplete, None, None]: ...
    @property
    def num_subsubsections(self): ...
    @property
    def subsubsections(self): ...
    def __getitem__(self, name): ...

class AttributesSection(Section):
    subsection: Incomplete
    subsec_start: Incomplete
    def __init__(self, header, name, elffile, subsection) -> None: ...
    def iter_subsections(
        self, vendor_name: Incomplete | None = None
    ) -> Generator[Incomplete, None, None]: ...
    @property
    def num_subsections(self): ...
    @property
    def subsections(self): ...

class ARMAttribute(Attribute):
    value: Incomplete
    extra: Incomplete
    def __init__(self, structs, stream) -> None: ...

class ARMAttributesSubsubsection(AttributesSubsubsection):
    def __init__(self, stream, structs, offset) -> None: ...

class ARMAttributesSubsection(AttributesSubsection):
    def __init__(self, stream, structs, offset) -> None: ...

class ARMAttributesSection(AttributesSection):
    def __init__(self, header, name, elffile) -> None: ...

class RISCVAttribute(Attribute):
    value: Incomplete
    extra: Incomplete
    def __init__(self, structs, stream) -> None: ...

class RISCVAttributesSubsubsection(AttributesSubsubsection):
    def __init__(self, stream, structs, offset) -> None: ...

class RISCVAttributesSubsection(AttributesSubsection):
    def __init__(self, stream, structs, offset) -> None: ...

class RISCVAttributesSection(AttributesSection):
    def __init__(self, header, name, elffile) -> None: ...
