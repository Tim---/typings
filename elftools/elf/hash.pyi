from ..common.utils import struct_parse as struct_parse
from .sections import Section as Section
from _typeshed import Incomplete

class ELFHashTable:
    elffile: Incomplete
    params: Incomplete
    def __init__(self, elffile, start_offset, symboltable) -> None: ...
    def get_number_of_symbols(self): ...
    def get_symbol(self, name): ...
    @staticmethod
    def elf_hash(name): ...

class ELFHashSection(Section, ELFHashTable):
    def __init__(self, header, name, elffile, symboltable) -> None: ...

class GNUHashTable:
    elffile: Incomplete
    params: Incomplete
    def __init__(self, elffile, start_offset, symboltable) -> None: ...
    def get_number_of_symbols(self): ...
    def get_symbol(self, name): ...
    @staticmethod
    def gnu_hash(key): ...

class GNUHashSection(Section, GNUHashTable):
    def __init__(self, header, name, elffile, symboltable) -> None: ...
