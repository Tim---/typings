from ..construct import ConstructError as ConstructError, ULInt8 as ULInt8
from .exceptions import (
    DWARFError as DWARFError,
    ELFError as ELFError,
    ELFParseError as ELFParseError,
)
from _typeshed import Incomplete
from collections.abc import Generator

def merge_dicts(*dicts): ...
def bytes2str(b): ...
def bytelist2string(bytelist): ...
def struct_parse(struct, stream, stream_pos: Incomplete | None = None): ...
def parse_cstring_from_stream(stream, stream_pos: Incomplete | None = None): ...
def elf_assert(cond, msg: str = "") -> None: ...
def dwarf_assert(cond, msg: str = "") -> None: ...
def preserve_stream_pos(stream) -> Generator[None, None, None]: ...
def roundup(num, bits): ...
def read_blob(stream, length): ...
def save_dwarf_section(section, filename) -> None: ...
def iterbytes(b) -> Generator[Incomplete, None, None]: ...
def bytes2hex(b, sep: str = ""): ...
