from ..common.utils import dwarf_assert as dwarf_assert
from .die import DIE as DIE
from _typeshed import Incomplete
from collections.abc import Generator

class CompileUnit:
    dwarfinfo: Incomplete
    header: Incomplete
    structs: Incomplete
    cu_offset: Incomplete
    cu_die_offset: Incomplete
    def __init__(
        self, header, dwarfinfo, structs, cu_offset, cu_die_offset
    ) -> None: ...
    def dwarf_format(self): ...
    def get_abbrev_table(self): ...
    def get_top_DIE(self): ...
    def has_top_DIE(self): ...
    @property
    def size(self): ...
    def get_DIE_from_refaddr(self, refaddr): ...
    def iter_DIEs(self): ...
    def iter_DIE_children(self, die) -> Generator[Incomplete, None, None]: ...
    def __getitem__(self, name): ...
