from ..common.utils import struct_parse as struct_parse
from ..construct import CString as CString, If as If, Struct as Struct
from _typeshed import Incomplete
from bisect import bisect_right as bisect_right
from collections.abc import Mapping
from typing import NamedTuple

class NameLUTEntry(NamedTuple):
    cu_ofs: Incomplete
    die_ofs: Incomplete

class NameLUT(Mapping):
    def __init__(self, stream, size, structs) -> None: ...
    def get_entries(self): ...
    def set_entries(self, entries, cu_headers) -> None: ...
    def __len__(self) -> int: ...
    def __getitem__(self, name): ...
    def __iter__(self): ...
    def items(self): ...
    def get(self, name, default: Incomplete | None = None): ...
    def get_cu_headers(self): ...
